public class Solution {
    public String convert(String s, int numRows) {

        if(numRows == 1 || numRows >= s.length())
            return s;
        
        int maxP = 2 * numRows - 2;
        char [] origin = new char[s.length()];
        int ol = origin.length;
        s.getChars(0, ol, origin, 0);
        
        char [] target = new char [ol];
        int ti = 0;
        
        int i;

        //n=0
        for(i=0; i<ol; i+=maxP){
            target[ti++] = origin[i];
        }

        //n=1 ~ numRows-2
        int t = numRows-1;
        int add;
        for(int n=1; n<t; n++){
            add = maxP - 2 * n;
            for(i=n; i<ol; i+=add, add=maxP-add){
                target[ti++] = origin[i];
            }
        }

        //n=numRows-1
        for(i=numRows-1; i<ol; i+=maxP)
            target[ti++] = origin[i];

        
        return new String(target);
    }
}
